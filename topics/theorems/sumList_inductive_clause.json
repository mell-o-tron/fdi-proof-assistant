{
  "theorem": {
    "name": "sumList_inductive_clause",
    "display_name": {
      "english": "sumList (inductive clause)",
      "italiano": "sumList (clausola induttiva)"
    },
    "text": {
      "english": "Inductive clause of the definition of \\(\\texttt{sumList}\\): \\begin{multline} \\forall l \\in L_\\mathbb{N}.\\; \\forall n \\in \\mathbb{N} .\\\\ \\texttt{sumList}(n :: l) = \\texttt{sumList}(l) + n \\end{multline}",
      "italiano": "Clausola induttiva della definizione di \\(\\texttt{sumList}\\): \\begin{multline} \\forall l \\in L_\\mathbb{N}.\\; \\forall n \\in \\mathbb{N} .\\\\ \\texttt{sumList}(n :: l) = \\texttt{sumList}(l) + n \\end{multline}"
    },
    "coq": "Theorem sumList_inductive_clause : forall (l : listn) (n : nat), sumList (n :: l) = sumList l + n.\nProof.\nreflexivity.\nQed."
  }
}