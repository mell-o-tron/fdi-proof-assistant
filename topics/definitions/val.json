{
  "definition": {
    "name": "val",
    "is_function": "true",
    "arity": 1,
    "display_name": "val",
    "text": {
      "english": "Let \\( \\texttt{val} : \\mathcal{N}Term \\to \\mathbb{N} \\) be defined as follows:<ul style=\"padding : 15px;\"><li>Base Clause: \\( \\texttt{val}(Z) = 0 \\)</li><li>Inductive Clause: \\( \\texttt{val}(S(n)) = \\texttt{val}(n) + 1 \\).</li></ul>",
      "italiano": "Sia \\( \\texttt{val} : \\mathcal{N}Term \\to \\mathbb{N} \\) definita come segue:<ul style=\"padding : 15px;\"><li>Clausola Base: \\( \\texttt{val}(Z) = 0 \\)</li><li>Clausola Induttiva: \\( \\texttt{val}(S(n)) = \\texttt{val}(n) + 1 \\).</li></ul>"
    },
    "coq": "Fixpoint val (n : nterm) : nat := match n with | Z => 0 | S n' => val n' + 1 end.\n"
  },
  "theorems": [
    {
      "name": "val_base_clause",
      "display_name": {
        "english": "val (base clause)",
        "italiano": "val (clausola base)"
      },
      "text": {
        "english": "Base clause of definition of \\(\\texttt{val}\\):\n\n\\[ \\texttt{val}(Z) = 0 \\]",
        "italiano": "Clausola base della definizione di \\(\\texttt{val}\\):\n\n\n\\[ \\texttt{val}(Z) = 0 \\]"
      },
      "coq": "Theorem val_base_clause : val Z = 0.\nProof.\nreflexivity.\nQed."
    },
    {
      "name": "val_inductive_clause",
      "display_name": {
        "english": "val (inductive clause)",
        "italiano": "val (clausola induttiva)"
      },
      "text": {
        "english": "Inductive clause of the definition of \\(\\texttt{val}\\):\n\n\\[ \\forall n \\in \\mathcal{N}Term .\\; \\texttt{val}(S(n)) = \\texttt{val}(n) + 1  \\]",
        "italiano": "Clausola induttiva della definizione di \\(\\texttt{val}\\):\n\n\\[ \\forall n \\in \\mathcal{N}Term .\\; \\texttt{val}(S(n)) = \\texttt{val}(n) + 1  \\]"
      },
      "coq": "Theorem val_inductive_clause : forall (n : nterm) , val (S n) = val n + 1.\nProof.\nreflexivity.\nQed.\n"
    }
  ]
}