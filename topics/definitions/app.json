{
  "definition": {
    "name": "app",
    "is_function": "true",
    "arity": 2,
    "display_name": "app",
    "text": {
      "english": "Let \\( \\texttt {app} : L_A \\times L_A \\to L_A \\) be defined as follows:<ul style=\"padding : 15px;\"><li>Base Clause: \\( \\texttt{app}([], l_2) = l_2 \\)</li><li>Inductive Clause: \\( \\texttt{app}(a :: l_1, l_2) = a :: \\texttt{app} (l_1, l_2) \\).</li></ul>",
      "italiano": "Sia \\( \\texttt {app} : L_A \\times L_A \\to L_A \\) definita come segue:<ul style=\"padding : 15px;\"><li>Clausola Base: \\( \\texttt{app}([], l_2) = l_2 \\)</li><li>Clausola Induttiva: \\( \\texttt{app}(a :: l_1, l_2) =  a :: \\texttt{app} (l_1, l_2) \\).</li></ul>"
    },
    "coq": "Fixpoint app (x y : listn) : listn := match x with | [] => y | x::xs => x :: app xs y end.\n"
  }
}