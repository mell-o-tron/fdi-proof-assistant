{
  "definitions": [
    {
      "text": "Let \\(S\\) be the successor function. \\(\\mathbb N\\) is defined as follows: <ul><li>\\(0 \\in \\mathbb N\\)</li><li>\\(\\forall n \\in \\mathbb N . succ(n) \\in \\mathbb N\\).</li></ul>",
      "coq": "Inductive nat : Type := | zero : nat | succ : nat -> nat.\nNotation \"0\" := (zero).\n"
    },
    {
      "text": "Let \\( ({+}) : \\mathbb N \\times \\mathbb N \\to \\mathbb N \\) be defined as follows:<ul><li>\\(0 + m \\triangleq m\\)</li><li>\\( succ (n) + m \\triangleq succ (n + m) \\).</li></ul>",
      "coq": "Fixpoint add (n m : nat) : nat := match n with | 0 => m | succ n' => succ (add n' m) end.\nNotation \"A + B\" := (add A B).\n"
    }
  ],
  "theorems": [
  {
    "name": "add_dist",
    "text": "Addition is distributive, i.e. \\[ \\forall a, b, c \\in \\mathbb N . (a + b) + c = a + (b + c) \\]",
    "coq": "Theorem add_dist : forall a b c : nat, add (add a b) c = add a (add b c).\nProof.\nAdmitted.\n"
  },
  {
    "name": "add_zero_left",
    "text": "\\[ \\forall a \\in \\mathbb N . 0 + a = a \\]",
    "coq": "Theorem add_zero_left : forall a : nat, add 0 a = a.\nProof.\nAdmitted.\n"
  }
  ]
} 
 
